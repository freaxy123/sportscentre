# This docker-compose file builds all services using a multistage dockerfile and puts all microservices in production mode
# Also a MongoDB atlas database in the cloud is used
version: '3.3'
services:
  gateway:
    container_name: gateway
    build:
      context: .
      dockerfile: docker/gateway/Dockerfile-build-run
    ports:
      - 8080:8080
    environment:
      - SPRING_PROFILES_ACTIVE=production
      - AZURE_SET_URI=${AZURE_SET_URI}
      - AZURE_ISSUER_URI=${AZURE_ISSUER_URI}
      - AZURE_AUDIENCE=${AZURE_AUDIENCE}
    env_file:
      - .env
    networks:
      - gateway-network

  user-service:
    container_name: user-service
    build:
      context: .
      dockerfile: docker/user-service/Dockerfile-build-run
    ports:
      - 8081:8081
    environment:
      - SPRING_PROFILES_ACTIVE=atlas
      - ENCRYPT_KEY=${ENCRYPT_KEY}
      - ATLAS_CONNECTION_STRING=${ATLAS_CONNECTION_STRING}
      - USER_DATABASE_NAME=${USER_DATABASE_NAME}
      - AZURE_CONNECTION_STRING=${AZURE_CONNECTION_STRING}
    env_file:
      - .env
    networks:
      - kafka-network
      - gateway-network
    depends_on:
      - kafka-service

  workout-service:
    container_name: workout-service
    build:
      context: .
      dockerfile: docker/workout-service/Dockerfile-build-run
    ports:
      - 8082:8082
    environment:
      - SPRING_PROFILES_ACTIVE=atlas
      - ENCRYPT_KEY=${ENCRYPT_KEY}
      - ATLAS_CONNECTION_STRING=${ATLAS_CONNECTION_STRING}
      - WORKOUT_DATABASE_NAME=${WORKOUT_DATABASE_NAME}
      - AZURE_CONNECTION_STRING=${AZURE_CONNECTION_STRING}
    env_file:
      - .env
    networks:
      - kafka-network
      - gateway-network
    depends_on:
      - kafka-service

  zookeeper-service:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    networks:
      - kafka-network

  kafka-service:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka-service
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-service:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
    depends_on:
      - zookeeper-service
    networks:
      - kafka-network

networks:
  kafka-network:
    driver: bridge
  gateway-network:
    driver: bridge
