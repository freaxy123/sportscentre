# This docker-compose file runs all the images based on the locally build packages
# Also every service has a dedicated database container and everything is run on localhost
version: '3.3'
services:
  gateway:
    container_name: gateway
    build:
      context: .
      dockerfile: docker/gateway/Dockerfile-run
    ports:
      - 8080:8080
    environment:
      - SPRING_PROFILES_ACTIVE=development
      - AZURE_SET_URI=${AZURE_SET_URI}
      - AZURE_ISSUER_URI=${AZURE_ISSUER_URI}
      - AZURE_AUDIENCE=${AZURE_AUDIENCE}
    env_file:
      - .env
    networks:
      - gateway-network

  user-service:
    container_name: user-service
    build:
      context: .
      dockerfile: docker/user-service/Dockerfile-run
    ports:
      - 8081:8081
    environment:
      - SPRING_PROFILES_ACTIVE=development
      - ENCRYPT_KEY=${ENCRYPT_KEY}
      - ATLAS_CONNECTION_STRING=${ATLAS_CONNECTION_STRING}
      - USER_DATABASE_NAME=${USER_DATABASE_NAME}
      - AZURE_CONNECTION_STRING=${AZURE_CONNECTION_STRING}
    env_file:
      - .env
    networks:
      - user-network
      - kafka-network
      - gateway-network
    depends_on:
      - mongo-user
      - kafka-service

  mongo-user:
    container_name: mongo-user
    image: mongo:6.0.2
    environment:
      MONGO_INITDB_ROOT_USERNAME: user
      MONGO_INITDB_ROOT_PASSWORD: user
    volumes:
      - mongo-user:/data/db
    ports:
      - 27017:27017
    networks:
      - user-network
#    restart: unless-stopped

  workout-service:
    container_name: workout-service
    build:
      context: .
      dockerfile: docker/workout-service/Dockerfile-run
    ports:
      - 8082:8082
    environment:
      - SPRING_PROFILES_ACTIVE=development
      - ENCRYPT_KEY=${ENCRYPT_KEY}
      - ATLAS_CONNECTION_STRING=${ATLAS_CONNECTION_STRING}
      - WORKOUT_DATABASE_NAME=${WORKOUT_DATABASE_NAME}
      - AZURE_CONNECTION_STRING=${AZURE_CONNECTION_STRING}
    env_file:
      - .env
    networks:
      - workout-network
      - kafka-network
      - gateway-network
    depends_on:
      - mongo-workout
      - kafka-service

  mongo-workout:
    container_name: mongo-workout
    image: mongo:6.0.2
    environment:
      MONGO_INITDB_ROOT_USERNAME: workout
      MONGO_INITDB_ROOT_PASSWORD: workout
    volumes:
      - mongo-workout:/data/db
    ports:
      - 27018:27017
    networks:
      - workout-network
#    restart: unless-stopped

  zookeeper-service:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    networks:
      - kafka-network

  kafka-service:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka-service
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-service:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    depends_on:
      - zookeeper-service
    networks:
      - kafka-network

networks:
  user-network:
    driver: bridge
  workout-network:
    driver: bridge
  kafka-network:
    driver: bridge
  gateway-network:
    driver: bridge


volumes:
  mongo-user:
  mongo-workout: