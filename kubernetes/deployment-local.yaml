#https://stackoverflow.com/questions/41868161/kafka-in-kubernetes-cluster-how-to-publish-consume-messages-from-outside-of-kub
apiVersion: v1
kind: Service
metadata:
  name: gateway
  labels:
    app: gateway
spec:
  ports:
    - port: 80
      targetPort: 8080
  selector:
    app: gateway
  type: LoadBalancer
---
apiVersion: apps/v1 #  for k8s versions before 1.9.0 use apps/v1beta2  and before 1.8.0 use extensions/v1beta1
kind: Deployment
metadata:
  name: gateway
spec:
  selector:
    matchLabels:
      app: gateway
  replicas: 1
  template:
    metadata:
      labels:
        app: gateway
    spec:
      containers:
        - name: gateway
          image: ghcr.io/freaxy123/sportscentre/gateway:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: workout-service
  labels:
    app: workout-service
spec:
  ports:
    - port: 80
      targetPort: 8082
  selector:
    app: workout-service

---
apiVersion: apps/v1 #  for k8s versions before 1.9.0 use apps/v1beta2  and before 1.8.0 use extensions/v1beta1
kind: Deployment
metadata:
  name: workout-service
spec:
  selector:
    matchLabels:
      app: workout-service
  replicas: 1
  template:
    metadata:
      labels:
        app: workout-service
    spec:
      containers:
        - name: workout-service
          image: ghcr.io/freaxy123/sportscentre/workout-service:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8082
---
apiVersion: v1
kind: Service
metadata:
  name: user-service
  labels:
    app: user-service
spec:
  ports:
    - port: 80
      targetPort: 8081
  selector:
    app: user-service
---
apiVersion: apps/v1 #  for k8s versions before 1.9.0 use apps/v1beta2  and before 1.8.0 use extensions/v1beta1
kind: Deployment
metadata:
  name: user-service
spec:
  selector:
    matchLabels:
      app: user-service
  replicas: 1
  template:
    metadata:
      labels:
        app: user-service
    spec:
      containers:
        - name: workout-service
          image: ghcr.io/freaxy123/sportscentre/user-service:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8081
---
#Kafka
apiVersion: v1
kind: Service
metadata:
  name: zookeeper
  labels:
    name: zookeeper
spec:
  ports:
    - name: client
      port: 2181
      protocol: TCP
    - name: follower
      port: 2888
      protocol: TCP
    - name: leader
      port: 3888
      protocol: TCP
  selector:
    app: zookeeper
---
apiVersion: v1
kind: Service
metadata:
  name: kafka
  labels:
    name: kafka
spec:
  ports:
    - name: kafka-port
      port: 9092
      protocol: TCP
  selector:
    app: kafka
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zookeeper
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zookeeper
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      containers:
        - env:
            - name: ZOOKEEPER_ID
              value: "1"
            - name: ZOOKEEPER_SERVER_1
              value: zookeeper
          name: zookeeper
          image: wurstmeister/zookeeper
          ports:
            - containerPort: 2181
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
        - env:
            - name: ENABLE_AUTO_EXTEND
              value: "true"
            - name: KAFKA_RESERVED_BROKER_MAX_ID
              value: "999999999"
            - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
              value: "false"
            - name: KAFKA_PORT
              value: "9092"
            - name: KAFKA_ADVERTISED_PORT
              value: "9092"
            - name: KAFKA_ADVERTISED_HOST_NAME
              value: "kafka"
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: zookeeper:2181
            - name: KAFKA_DEFAULT_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_CREATE_TOPICS
              value: user-deletion:1:1
          name: kafka
          image: wurstmeister/kafka
          ports:
            - containerPort: 9092